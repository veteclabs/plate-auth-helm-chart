replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ''
redis:
  ip: 127.0.0.1
  enabled: true
  volumePermissions:
    enabled: true
  port: '6378'
  auth:
    enabled: true
    password: vetec3721!
  capacity: 200Mi
  architecture: standalone
  service:
    type: NodePort
    nodePorts:
      redis: 32379
  master:
    persistence:
      enabled: true
      existingClaim: redis-pvc
      storageClass: local-storage
      type: pvc
      accessModes:
      - ReadWriteOnce
      subPath: redis
    service:
      type: ClusterIP
      ports:
        redis: 6379
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      existingClaim: redis2-pvc
      storageClass: local-storage
      type: pvc
      accessModes:
      - ReadWriteOnce
      subPath: redis
persistentVolume:
  path: /volumes/plate
  enabled: true
  storageClass: manual
  capacity: 200Mi
  accessModes:
  - ReadWriteOnce
  reclaimPolicy: Retain
  nodeName: platek8s-master-node
production:
  database:
    host: ''
    port: ''
    username: ''
    password: ''
    databaseBom: ''
    databaseConfig: ''
    timezone: +09:00
    dialect: ''
  keycloak:
    realm: ''
    scope: ''
    adminUsername: ''
    adminPwd: ''
    adminClientId: ''
    adminClientSecret: ''
    clientId: ''
    clientSecret: ''
    grantTypeCode: ''
    grantTypePwd: ''
    redirectUri: ''
    urlMaster: ''
    urlPlate: ''
    urlPlateAdmin: ''
  stibee:
    listID: ''
    apiKey: ''
  smtp:
    user: ''
    password: ''
  google:
    clientId: ''
    clientSecret: ''
    loginRedirectUri: ''
  redirectUri:
    main: ''
  mailer:
    verificationPage: ''
    pwdResetUrl: ''
backend:
  enabled: true
  imageName: vetec/plate-auth-backend
  tag: e780bb9
  port: 3723
  targetPort: 3723
  replicas: 1
frontend:
  enabled: true
  imageName: vetec/plate-auth-frontend
  tag: aff5db7
  port: 3750
  targetPort: 3750
  replicas: 1
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ''
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 80
ingress:
  enabled: true
  className: ''
  hostname: ''
  annotations: {}
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
resources: {}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
args:
  appResyncPeriod: '10'
